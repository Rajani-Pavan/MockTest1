/*
  Move Zeroes
  Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

  Note that you must do this in-place without making a copy of the array.

  Example 1:
  Input: nums = [0,1,0,3,12]
  Output: [1,3,12,0,0]

  Example 2:
  Input: nums = [0]
  Output: [0]

  Constraints:
  a. 1 <= nums.length <= 10^4
  b. -2^31 <= nums[i] <= 2^31 - 1
*/

public class MoveZerosToEnd {
  private static int[] moveZerosToEndArray(int [] nums) {
    int temp = 0;
    //following two pointer approach
    for (int i=0;i<nums.length;i++) {
      for (int j=i+1;j<nums.length;j++) {
      //checking array elements weather it is 0 then exchange it with next element which is greater than zero 
        if (nums[i] == 0 && nums[i] < nums[j]) {
            temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
          }
      }
  }
  return nums;
}

public static void main(String [] args) {
  int [] nums = {0,1,0,3,12}
  nums = moveZerosToEndArray(nums);
  System.out.println("Elements of given array after moving all zeros to end: ");
   for (int i=0;i<nums.length;i++)  {
      System.out.print(nums[i]+" ");
     }
   }
}
  

